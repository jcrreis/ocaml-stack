
type token = 
  | SEMICOLON
  | RPAREN
  | PUSH
  | POP
  | MERGE
  | LPAREN
  | LET
  | INT of (
# 13 "lib/parser.mly"
        (int)
# 14 "lib/parser__mock.ml.mock"
)
  | EQUALS
  | EOF
  | EMPTY
  | DOT
  | COMMA
  | COLON

let menhir_begin_marker =
  0

and (xv_prog, xv_expr) =
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 38 "lib/parser.mly"
               _2
# 30 "lib/parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 38 "lib/parser.mly"
      e
# 34 "lib/parser__mock.ml.mock"
   : 'tv_expr) (_startpos_e_ : Lexing.position) (_endpos_e_ : Lexing.position) (_startofs_e_ : int) (_endofs_e_ : int) (_loc_e_ : Lexing.position * Lexing.position) ->
    ((
# 38 "lib/parser.mly"
                    ( e )
# 39 "lib/parser__mock.ml.mock"
     : 'tv_prog) : (
# 33 "lib/parser.mly"
       (Stacks.expr)
# 43 "lib/parser__mock.ml.mock"
    )) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 48 "lib/parser.mly"
      i
# 48 "lib/parser__mock.ml.mock"
   : (
# 13 "lib/parser.mly"
        (int)
# 52 "lib/parser__mock.ml.mock"
  )) (_startpos_i_ : Lexing.position) (_endpos_i_ : Lexing.position) (_startofs_i_ : int) (_endofs_i_ : int) (_loc_i_ : Lexing.position * Lexing.position) ->
    (
# 48 "lib/parser.mly"
              ( Int i )
# 57 "lib/parser__mock.ml.mock"
     : 'tv_expr) in
  ((let rec diverge() = diverge() in diverge()) : 'tv_prog * 'tv_expr)

and menhir_end_marker =
  0
